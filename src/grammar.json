{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "razor",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "razor_code_block"
          },
          {
            "type": "SYMBOL",
            "name": "razor_directive"
          },
          {
            "type": "SYMBOL",
            "name": "razor_expression"
          },
          {
            "type": "SYMBOL",
            "name": "element"
          },
          {
            "type": "SYMBOL",
            "name": "html_text"
          },
          {
            "type": "SYMBOL",
            "name": "razor_error"
          }
        ]
      }
    },
    "razor_directive": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "ALIAS",
                  "content": {
                    "type": "SYMBOL",
                    "name": "identifier"
                  },
                  "named": true,
                  "value": "directive_name"
                },
                {
                  "type": "REPEAT1",
                  "content": {
                    "type": "SYMBOL",
                    "name": "directive_argument"
                  }
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            }
          ]
        }
      ]
    },
    "directive_argument": {
      "type": "PREC",
      "value": -10,
      "content": {
        "type": "TOKEN",
        "content": {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "PATTERN",
            "value": "[^\\s@{}<>]+"
          }
        }
      }
    },
    "razor_code_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "code"
            },
            {
              "type": "STRING",
              "value": "functions"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SYMBOL",
          "name": "csharp_code_content"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "razor_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                },
                {
                  "type": "STRING",
                  "value": "."
                },
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                },
                {
                  "type": "STRING",
                  "value": "("
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "expression_argument_list"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "STRING",
                  "value": ")"
                }
              ]
            }
          ]
        }
      ]
    },
    "expression_argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression_argument"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "expression_argument"
              }
            ]
          }
        }
      ]
    },
    "expression_argument": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "[^\\s,@)]+"
        }
      }
    },
    "element": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "self_closing_tag"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "start_tag"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "element"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "html_text"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "razor_expression"
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "end_tag"
            }
          ]
        }
      ]
    },
    "start_tag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "SYMBOL",
          "name": "tag_name"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "attribute"
              },
              {
                "type": "SYMBOL",
                "name": "razor_attribute"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "end_tag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "</"
        },
        {
          "type": "SYMBOL",
          "name": "tag_name"
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "self_closing_tag": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "SYMBOL",
          "name": "tag_name"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "attribute"
              },
              {
                "type": "SYMBOL",
                "name": "razor_attribute"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "/>"
        }
      ]
    },
    "tag_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z][a-zA-Z0-9-]*"
    },
    "attribute": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "attribute_name"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "="
                },
                {
                  "type": "SYMBOL",
                  "name": "attribute_value"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "razor_attribute": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "="
                },
                {
                  "type": "SYMBOL",
                  "name": "attribute_value"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "attribute_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_:][a-zA-Z0-9_:.-]*"
    },
    "attribute_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "razor_attribute_value_content"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "razor_attribute_value_content"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": "'"
            }
          ]
        }
      ]
    },
    "attribute_value_content": {
      "type": "SYMBOL",
      "name": "razor_attribute_value_content"
    },
    "html_text": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "TOKEN",
        "content": {
          "type": "PREC",
          "value": -10,
          "content": {
            "type": "PATTERN",
            "value": "[^<@{}][^<@{}]*"
          }
        }
      }
    },
    "razor_comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@*"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^*]+|\\*+[^@*]"
          }
        },
        {
          "type": "STRING",
          "value": "*@"
        }
      ]
    },
    "html_comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<!--"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "[^-]+|-+[^->]"
          }
        },
        {
          "type": "STRING",
          "value": "-->"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "razor_error": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "PATTERN",
            "value": "[^\\s{]"
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "razor_comment"
    },
    {
      "type": "SYMBOL",
      "name": "html_comment"
    }
  ],
  "conflicts": [
    [
      "attribute_value",
      "razor_attribute_value_content"
    ],
    [
      "attribute_value_content",
      "razor_attribute_value_content"
    ],
    [
      "source_file",
      "html_text"
    ],
    [
      "razor_directive",
      "razor_expression"
    ]
  ],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "csharp_code_content"
    },
    {
      "type": "SYMBOL",
      "name": "razor_attribute_value_content"
    }
  ],
  "inline": [],
  "supertypes": []
}
